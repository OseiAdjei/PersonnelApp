// <auto-generated />
using System;
using App;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240129114008_modelwithbio")]
    partial class modelwithbio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App.Domain.College", b =>
                {
                    b.Property<int>("CollegeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollegeId"));

                    b.Property<string>("CollegeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeProvost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<int?>("NspId")
                        .HasColumnType("int");

                    b.HasKey("CollegeId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("NspId");

                    b.ToTable("College");
                });

            modelBuilder.Entity("App.Domain.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentHod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NspId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("NspId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("App.Domain.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FacultyDean")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NspId")
                        .HasColumnType("int");

                    b.HasKey("FacultyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NspId");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("App.Domain.Nsp", b =>
                {
                    b.Property<int>("NspId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NspId"));

                    b.Property<string>("NspBio")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NspEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NspName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NspNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NspPhone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("NspPicUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NspId");

                    b.ToTable("Nsp");
                });

            modelBuilder.Entity("App.Domain.College", b =>
                {
                    b.HasOne("App.Domain.Faculty", "Faculty")
                        .WithMany("Colleges")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Nsp", null)
                        .WithMany("Colleges")
                        .HasForeignKey("NspId");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("App.Domain.Department", b =>
                {
                    b.HasOne("App.Domain.Nsp", null)
                        .WithMany("Departments")
                        .HasForeignKey("NspId");
                });

            modelBuilder.Entity("App.Domain.Faculty", b =>
                {
                    b.HasOne("App.Domain.Department", "Department")
                        .WithMany("Faculties")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Nsp", null)
                        .WithMany("Faculties")
                        .HasForeignKey("NspId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("App.Domain.Department", b =>
                {
                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("App.Domain.Faculty", b =>
                {
                    b.Navigation("Colleges");
                });

            modelBuilder.Entity("App.Domain.Nsp", b =>
                {
                    b.Navigation("Colleges");

                    b.Navigation("Departments");

                    b.Navigation("Faculties");
                });
#pragma warning restore 612, 618
        }
    }
}
